<!-- AI Chat Modal -->
<div class="modal fade" id="aiChatModal" tabindex="-1" aria-labelledby="aiChatModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="aiChatModalLabel">AI Asistan</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div id="chatMessages" class="chat-messages">
          <!-- Mesajlar buraya dinamik olarak eklenecek -->
        </div>
        <div id="loadingIndicator" class="loading-indicator" style="display: none;">
          <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Düşünüyor...</span>
          </div>
          <span class="ms-2">Düşünüyor...</span>
        </div>
      </div>
      <div class="modal-footer">
        <div class="input-group">
          <input type="text" id="messageInput" class="form-control" placeholder="Mesajınızı yazın...">
          <button class="btn btn-primary" id="sendButton" type="button">
            <i class="fas fa-paper-plane"></i>
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
.chat-messages {
  height: 400px;
  overflow-y: auto;
  padding: 1rem;
}

.message {
  margin-bottom: 1rem;
  max-width: 80%;
}

.message.user {
  margin-left: auto;
}

.message.ai {
  margin-right: auto;
}

.message-content {
  padding: 0.75rem 1rem;
  border-radius: 1rem;
  display: inline-block;
}

.message.user .message-content {
  background-color: #0d6efd;
  color: white;
  border-bottom-right-radius: 0.25rem;
}

.message.ai .message-content {
  background-color: #f8f9fa;
  border: 1px solid #dee2e6;
  border-bottom-left-radius: 0.25rem;
}

.loading-indicator {
  display: flex;
  align-items: center;
  padding: 0.5rem;
  margin-bottom: 1rem;
}

.modal-footer {
  border-top: none;
  padding: 1rem;
}

#messageInput {
  border-radius: 1.5rem 0 0 1.5rem;
  border-right: none;
}

#sendButton {
  border-radius: 0 1.5rem 1.5rem 0;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const modal = document.getElementById('aiChatModal');
  const messageInput = document.getElementById('messageInput');
  const sendButton = document.getElementById('sendButton');
  const chatMessages = document.getElementById('chatMessages');
  const loadingIndicator = document.getElementById('loadingIndicator');
  
  let chatHistory = [];
  
  // Mesaj gönderme fonksiyonu
  async function sendMessage() {
    const message = messageInput.value.trim();
    if (!message) return;
    
    // Kullanıcı mesajını ekle
    addMessage('user', message);
    messageInput.value = '';
    
    // Loading göstergesini göster
    loadingIndicator.style.display = 'flex';
    
    try {
      const response = await fetch('/api/ai/chat', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          message,
          history: chatHistory
        })
      });
      
      if (!response.ok) {
        throw new Error('Yanıt alınamadı');
      }
      
      const data = await response.json();
      
      // AI yanıtını ekle
      addMessage('ai', data.response);
      
      // Sohbet geçmişini güncelle
      chatHistory.push(
        { role: 'user', content: message },
        { role: 'assistant', content: data.response }
      );
    } catch (error) {
      console.error('Hata:', error);
      addMessage('ai', 'Üzgünüm, bir hata oluştu. Lütfen tekrar deneyin.');
    } finally {
      loadingIndicator.style.display = 'none';
    }
  }
  
  // Mesaj ekleme fonksiyonu
  function addMessage(role, content) {
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${role}`;
    
    const messageContent = document.createElement('div');
    messageContent.className = 'message-content';
    messageContent.textContent = content;
    
    messageDiv.appendChild(messageContent);
    chatMessages.appendChild(messageDiv);
    
    // Otomatik scroll
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }
  
  // Event listeners
  sendButton.addEventListener('click', sendMessage);
  
  messageInput.addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
      sendMessage();
    }
  });
  
  // Modal kapandığında sohbeti sıfırla
  modal.addEventListener('hidden.bs.modal', function() {
    chatMessages.innerHTML = '';
    messageInput.value = '';
    chatHistory = [];
  });
});
</script> 